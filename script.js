// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã 2GIS
function initMap() {
    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ "Sadu Grand Hall" –≤ –ê–ª–º–∞—Ç—ã
    const LAT = 43.251467;
    const LNG = 76.75248;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ 2GIS API
    if (typeof DG === 'undefined') {
        console.warn('2GIS API –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback');
        showMapFallback();
        return;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É —á–µ—Ä–µ–∑ 2GIS loader
    DG.then(function () {
        try {
            // –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ —Å —Ü–µ–Ω—Ç—Ä–æ–º –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
            const map = DG.map('map', {
                center: [LAT, LNG],
                zoom: 16
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –∏ –ø–æ–ø–∞–ø
            const marker = DG.marker([LAT, LNG]).addTo(map);
            marker.bindPopup('<b>Sadu Grand Hall</b><br>–ê–ª–º–∞—Ç—ã “õ.<br>16 “õ–∞—Ä–∞—à–∞ 2025, 17:00').openPopup();

            // –î–æ–±–∞–≤–∏–º –∫–æ–Ω—Ç—Ä–æ–ª—ã (–º–∞—Å—à—Ç–∞–± –∏ –ª–æ–∫–∞—Ç–æ—Ä)
            DG.control.zoom({ position: 'topright' }).addTo(map);
            DG.control.locate({ position: 'topright' }).addTo(map);

            // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            hideMapLoading();
            
            console.log('–ö–∞—Ä—Ç–∞ 2GIS —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã 2GIS:', error);
            showMapFallback();
        }
    });
}

// –°–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
function hideMapLoading() {
    const loadingElement = document.getElementById('map-loading');
    if (loadingElement) {
        loadingElement.style.display = 'none';
    }
}

// Fallback –¥–ª—è –∫–∞—Ä—Ç—ã, –µ—Å–ª–∏ 2GIS –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
function showMapFallback() {
    const mapContainer = document.getElementById('map');
    hideMapLoading();
    
    mapContainer.innerHTML = `
        <div style="
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            background: linear-gradient(135deg, rgba(212, 175, 55, 0.1), rgba(244, 228, 188, 0.1));
            border-radius: 15px;
            text-align: center;
            padding: 20px;
        ">
            <div style="
                width: 60px;
                height: 60px;
                background: linear-gradient(135deg, #D4AF37, #F4E4BC);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                margin-bottom: 15px;
                font-size: 24px;
            ">üìç</div>
            <h4 style="color: #D4AF37; margin: 0 0 10px 0; font-family: 'KZ Balmoral', serif;">Sadu Grand Hall</h4>
            <p style="margin: 0 0 5px 0; color: #2c2c2c;">–≥. –ê–ª–º–∞—Ç—ã</p>
            <p style="margin: 0; font-size: 14px; color: #666;">16 –Ω–æ—è–±—Ä—è 2025, 17:00</p>
            <p style="margin: 15px 0 0 0; font-size: 12px; color: #999;">–ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</p>
        </div>
    `;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ RSVP
function handleRSVP(response) {
    const messageDiv = document.getElementById('rsvp-message');
    const buttons = document.querySelectorAll('.rsvp-btn');
    const nameInput = document.getElementById('guestName');
    const guestName = nameInput.value.trim();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–≤–µ–¥–µ–Ω–æ –ª–∏ –∏–º—è
    if (!guestName) {
        messageDiv.textContent = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é';
        messageDiv.className = 'rsvp-message info show';
        nameInput.focus();
        return;
    }
    
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
    buttons.forEach(btn => {
        btn.style.transform = 'scale(1)';
        btn.style.boxShadow = '';
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
    const clickedBtn = event.target.closest('.rsvp-btn');
    clickedBtn.style.transform = 'scale(0.95)';
    clickedBtn.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.2)';
    
    // –°–æ–∑–¥–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç ripple
    createRippleEffect(clickedBtn, event);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    messageDiv.classList.remove('show');
    
    setTimeout(() => {
        if (response === 'yes') {
            messageDiv.textContent = `–°–ø–∞—Å–∏–±–æ, ${guestName}! –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –ø—Ä–∏–¥–µ—Ç–µ –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫!`;
            messageDiv.className = 'rsvp-message success show';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Å—Ç—è –≤ —Å–ø–∏—Å–æ–∫
            addGuestToList(guestName, response);
        } else {
            messageDiv.textContent = `–ñ–∞–ª—å, —á—Ç–æ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏, ${guestName}. –ë—É–¥–µ–º —Å–∫—É—á–∞—Ç—å!`;
            messageDiv.className = 'rsvp-message info show';
        }
    }, 100);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ localStorage
    const rsvpData = {
        name: guestName,
        response: response,
        date: new Date().toISOString()
    };
    localStorage.setItem('rsvpResponse', JSON.stringify(rsvpData));
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    nameInput.value = '';
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ RSVP –æ—Ç–≤–µ—Ç–∞
function loadSavedRSVP() {
    const savedData = localStorage.getItem('rsvpResponse');
    
    if (savedData) {
        try {
            const rsvpData = JSON.parse(savedData);
            const responseDate = new Date(rsvpData.date);
            const now = new Date();
            const daysDiff = (now - responseDate) / (1000 * 60 * 60 * 24);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–¥–µ–ª–∞–Ω –Ω–µ–¥–∞–≤–Ω–æ (–≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π)
            if (daysDiff < 30) {
                const messageDiv = document.getElementById('rsvp-message');
                const buttons = document.querySelectorAll('.rsvp-btn');
                const nameInput = document.getElementById('guestName');
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ –∏–º–µ–Ω–∏
                nameInput.value = rsvpData.name;
                
                // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
                buttons.forEach(btn => {
                    if ((rsvpData.response === 'yes' && btn.classList.contains('yes-btn')) ||
                        (rsvpData.response === 'no' && btn.classList.contains('no-btn'))) {
                        btn.style.border = '2px solid #D4AF37';
                        btn.style.boxShadow = '0 0 15px rgba(212, 175, 55, 0.5)';
                    }
                });
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if (rsvpData.response === 'yes') {
                    messageDiv.textContent = `–í—ã —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ, ${rsvpData.name}! –°–ø–∞—Å–∏–±–æ!`;
                    messageDiv.className = 'rsvp-message success show';
                } else {
                    messageDiv.textContent = `–í—ã —É–∂–µ —Å–æ–æ–±—â–∏–ª–∏, —á—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏, ${rsvpData.name}.`;
                    messageDiv.className = 'rsvp-message info show';
                }
            }
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', e);
        }
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ ripple
function createRippleEffect(button, event) {
    const ripple = button.querySelector('.btn-ripple');
    if (ripple) {
        const rect = button.getBoundingClientRect();
        const x = event.clientX - rect.left;
        const y = event.clientY - rect.top;
        
        ripple.style.left = x + 'px';
        ripple.style.top = y + 'px';
        ripple.style.animation = 'none';
        ripple.offsetHeight; // Trigger reflow
        ripple.style.animation = 'ripple 0.6s linear';
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Å—Ç—è –≤ —Å–ø–∏—Å–æ–∫
function addGuestToList(name, response) {
    if (response === 'yes') {
        const guests = JSON.parse(localStorage.getItem('guestsList') || '[]');
        const newGuest = {
            name: name,
            date: new Date().toISOString(),
            id: Date.now()
        };
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ –≥–æ—Å—Ç—è
        const existingGuest = guests.find(guest => guest.name.toLowerCase() === name.toLowerCase());
        if (!existingGuest) {
            guests.push(newGuest);
            localStorage.setItem('guestsList', JSON.stringify(guests));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateGuestsStats();
        }
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≥–æ—Å—Ç–µ–π
function updateGuestsStats() {
    const guests = JSON.parse(localStorage.getItem('guestsList') || '[]');
    const statsNumber = document.querySelector('.stats-number');
    if (statsNumber) {
        statsNumber.textContent = guests.length;
        // –ê–Ω–∏–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        statsNumber.style.transform = 'scale(1.2)';
        setTimeout(() => {
            statsNumber.style.transform = 'scale(1)';
        }, 300);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π
function showGuestsList() {
    const modal = document.getElementById('guestsModal');
    modal.classList.add('show');
    modal.style.display = 'flex';
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π
    loadGuestsList();
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Ñ–æ–Ω–∞
    document.body.style.overflow = 'hidden';
}

// –ó–∞–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Å—Ç–µ–π
function closeGuestsList() {
    const modal = document.getElementById('guestsModal');
    modal.classList.remove('show');
    modal.style.display = 'none';
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Ñ–æ–Ω–∞
    document.body.style.overflow = 'auto';
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –≥–æ—Å—Ç–µ–π
function loadGuestsList() {
    const guests = JSON.parse(localStorage.getItem('guestsList') || '[]');
    const guestsList = document.getElementById('guestsList');
    const totalGuests = document.getElementById('totalGuests');
    const confirmedGuests = document.getElementById('confirmedGuests');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    if (totalGuests) totalGuests.textContent = guests.length;
    if (confirmedGuests) confirmedGuests.textContent = guests.length;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ RSVP —Å–µ–∫—Ü–∏–∏
    const statsNumber = document.querySelector('.stats-number');
    if (statsNumber) statsNumber.textContent = guests.length;
    
    // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
    guestsList.innerHTML = '';
    
    if (guests.length === 0) {
        guestsList.innerHTML = `
            <div class="no-guests">
                <div class="no-guests-icon">üë•</div>
                <p>–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —É—á–∞—Å—Ç–∏–µ</p>
            </div>
        `;
    } else {
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≥–æ—Å—Ç–µ–π –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
        const sortedGuests = guests.sort((a, b) => new Date(b.date) - new Date(a.date));
        
        sortedGuests.forEach((guest, index) => {
            const guestItem = document.createElement('div');
            guestItem.className = 'guest-item';
            guestItem.style.animationDelay = `${index * 0.1}s`;
            
            const initials = getInitials(guest.name);
            const timeAgo = getTimeAgo(guest.date);
            
            guestItem.innerHTML = `
                <div class="guest-avatar">${initials}</div>
                <div class="guest-name">${guest.name}</div>
                <div class="guest-time">${timeAgo}</div>
            `;
            
            guestsList.appendChild(guestItem);
        });
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–æ–≤ –∏–º–µ–Ω–∏
function getInitials(name) {
    return name.split(' ')
        .map(word => word.charAt(0).toUpperCase())
        .join('')
        .substring(0, 2);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–∑–∞–¥
function getTimeAgo(dateString) {
    const now = new Date();
    const date = new Date(dateString);
    const diffInMinutes = Math.floor((now - date) / (1000 * 60));
    
    if (diffInMinutes < 1) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffInMinutes < 60) return `${diffInMinutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    
    const diffInHours = Math.floor(diffInMinutes / 60);
    if (diffInHours < 24) return `${diffInHours} —á –Ω–∞–∑–∞–¥`;
    
    const diffInDays = Math.floor(diffInHours / 24);
    if (diffInDays < 7) return `${diffInDays} –¥–Ω –Ω–∞–∑–∞–¥`;
    
    return date.toLocaleDateString('ru-RU');
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
function animateOnScroll() {
    const elements = document.querySelectorAll('.info-item, .sponsor, .artists, .rsvp-section, .contacts');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, {
        threshold: 0.1
    });
    
    elements.forEach(element => {
        element.style.opacity = '0';
        element.style.transform = 'translateY(30px)';
        element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(element);
    });
}

// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏—è–º
function smoothScroll() {
    const links = document.querySelectorAll('a[href^="#"]');
    
    links.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('href').substring(1);
            const targetElement = document.getElementById(targetId);
            
            if (targetElement) {
                targetElement.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—á–∞—Ç–∞–Ω–∏—è –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
function typeWriter(element, text, speed = 100) {
    let i = 0;
    element.innerHTML = '';
    
    function type() {
        if (i < text.length) {
            element.innerHTML += text.charAt(i);
            i++;
            setTimeout(type, speed);
        }
    }
    
    type();
}

// –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ —Å–µ–∫—Ü–∏–∏
function scrollToSection(id) {
    const element = document.getElementById(id);
    if (element) {
        element.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    initMap();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π RSVP
    loadSavedRSVP();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
    animateOnScroll();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω—É—é –ø—Ä–æ–∫—Ä—É—Ç–∫—É
    smoothScroll();
    
    // –≠—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–∞–Ω–∏—è –¥–ª—è –∏–º–µ–Ω–∏
    const nameElement = document.querySelector('.name');
    if (nameElement) {
        const originalText = nameElement.textContent;
        typeWriter(nameElement, originalText, 150);
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–∞–ª–µ—Ä–µ—é
    initGallery();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modal = document.getElementById('guestsModal');
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeGuestsList();
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && modal.classList.contains('show')) {
            closeGuestsList();
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç hover –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
    const cards = document.querySelectorAll('.info-item, .sponsor, .artists');
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px) scale(1.02)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∫–ª–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    const buttons = document.querySelectorAll('.rsvp-btn, .map-link');
    buttons.forEach(button => {
        button.addEventListener('click', function() {
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = '';
            }, 150);
        });
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', function() {
    // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞
    if (window.innerWidth < 768) {
        const mapContainer = document.getElementById('map');
        if (mapContainer) {
            mapContainer.style.height = '250px';
        }
    } else {
        const mapContainer = document.getElementById('map');
        if (mapContainer) {
            mapContainer.style.height = '300px';
        }
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ –¥–ª—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
window.addEventListener('scroll', function() {
    const scrolled = window.pageYOffset;
    const parallaxElements = document.querySelectorAll('.milk-splash');
    
    parallaxElements.forEach(element => {
        const speed = 0.5;
        element.style.transform = `translateY(${scrolled * speed}px)`;
    });
});

// –°–ª–∞–π–¥-—à–æ—É –≥–∞–ª–µ—Ä–µ—è
let currentSlideIndex = 0;
const slides = document.querySelectorAll('.slide');
const indicators = document.querySelectorAll('.indicator');
const totalSlides = slides.length;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Å–ª–∞–π–¥–∞
function changeSlide(direction) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–∞–π–¥–∞ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    slides[currentSlideIndex].classList.remove('active');
    indicators[currentSlideIndex].classList.remove('active');
    
    // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å —Å–ª–∞–π–¥–∞
    currentSlideIndex += direction;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã
    if (currentSlideIndex >= totalSlides) {
        currentSlideIndex = 0;
    } else if (currentSlideIndex < 0) {
        currentSlideIndex = totalSlides - 1;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–æ–≤–æ–º—É —Å–ª–∞–π–¥—É –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É
    slides[currentSlideIndex].classList.add('active');
    indicators[currentSlideIndex].classList.add('active');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–ª–∞–π–¥—É
function currentSlide(slideNumber) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–ª–∞–π–¥–∞ –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
    slides[currentSlideIndex].classList.remove('active');
    indicators[currentSlideIndex].classList.remove('active');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
    currentSlideIndex = slideNumber - 1;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–æ–≤–æ–º—É —Å–ª–∞–π–¥—É –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É
    slides[currentSlideIndex].classList.add('active');
    indicators[currentSlideIndex].classList.add('active');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
let slideInterval;

function startSlideShow() {
    slideInterval = setInterval(() => {
        changeSlide(1);
    }, 4000); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã
}

function stopSlideShow() {
    clearInterval(slideInterval);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–∞–π–¥-—à–æ—É
function initGallery() {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
    startSlideShow();
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    const galleryContainer = document.querySelector('.gallery-container');
    if (galleryContainer) {
        galleryContainer.addEventListener('mouseenter', stopSlideShow);
        galleryContainer.addEventListener('mouseleave', startSlideShow);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    document.addEventListener('keydown', function(e) {
        if (e.key === 'ArrowLeft') {
            changeSlide(-1);
        } else if (e.key === 'ArrowRight') {
            changeSlide(1);
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–≤–∞–π–ø–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    let startX = 0;
    let endX = 0;
    
    galleryContainer.addEventListener('touchstart', function(e) {
        startX = e.touches[0].clientX;
    });
    
    galleryContainer.addEventListener('touchend', function(e) {
        endX = e.changedTouches[0].clientX;
        handleSwipe();
    });
    
    function handleSwipe() {
        const swipeThreshold = 50;
        const diff = startX - endX;
        
        if (Math.abs(diff) > swipeThreshold) {
            if (diff > 0) {
                // –°–≤–∞–π–ø –≤–ª–µ–≤–æ - —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥
                changeSlide(1);
            } else {
                // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ - –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥
                changeSlide(-1);
            }
        }
    }
}
